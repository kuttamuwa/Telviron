services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /code
    container_name: webdjango
    depends_on:
      - db
      - rabbit
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    networks:
      - postgres
    command:
      - sh ./run_web.sh
    links:
      - rabbit

  rabbit:
    hostname: rabbit
      image: rabbitmq:3-management
      environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=mypass
      ports:
        - "5672:5672"
        - "15672:15672"  # here, we can access rabbitmq management plugin

  db:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: figo1190
      POSTGRES_DB: telvirondb
    volumes:
        - postgres:/data/postgres
    networks:
      - postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ucok.umut@gmail.com
      PGADMIN_DEFAULT_PASSWORD: figo1190
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
    links:
      - "db:pgsql-server"

  flower:
    build: .
    command: celery -A DovizPanel flower
    depends_on:
      - worker
      - rabbit

  worker:
    build: .
    command: celery -A DovizPanel worker --pool=solo -l INFO -E
    depends_on:
      - rabbit


  beat:
    build: .
    command: celery -A DovizPanel beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - rabbit
      - worker


  nginx:
    container_name: nginx
    restart: on-failure
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./templates:/etc/nginx/templates
    ports:
      - "8080:80"
    depends_on:
      - db
    environment:
      - NGINX_HOST = localhost
      - NGINX_PORT = 80

networks:
  postgres:
    driver: bridge
volumes:
  postgres:
  pgadmin:





